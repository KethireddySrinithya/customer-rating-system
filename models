customer.models.js
//This model is for reference only. It was not a part of the requirement, hence not used.
const mongoose = require('mongoose');

const customerSchema = mongoose.Schema({
    customerId: {type: Number, required: true, unique: true},
    customerName: {type: String, required: true}
}, {timestamps: true});

module.exports = mongoose.model('customer', customerSchema, 'customers');  // create a collection named customer with customerSchema
product.model.js
//This model is for reference only. It was not a part of the requirement, hence not used.
const mongoose = require('mongoose');

const productSchema = mongoose.Schema({
    productId: {type: Number, required: true, unique: true},
    category: {type: String, default: "Placeholder"},
    subcategory: {type: String, default: "Placeholder"},
    name: {type: String, default: "Placeholder"},
    color: {type: String, default: "Black"},
    dimensions: {type: String },
    material: {type: String, default: "Wood"}
}, {timestamps: true}); 

module.exports = mongoose.model('product', productSchema, 'products'); // create a collection named products with furnitureSchema
rating.model.js
const mongoose = require('mongoose');

const ratingsSchema = mongoose.Schema({
    customerId: {type: Number, required: true},
    productId: {type:Number,required: true},
    rating: {type: Number, min: 1, max: 5, required: true, validate: {
        validator : Number.isInteger,
        message   : '{VALUE} is not an integer value'
      }},
    softDelete: {type: Boolean, default: false}
}, {timestamps: true}); //creates createdAt and updatedAt fields for tracking

module.exports = mongoose.model('rating', ratingsSchema, 'ratings'); // creates a collection named ratings with ratingsSchema
